#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " ! $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/ /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *) sed -u "$c";;
  esac
}

topic 'Rewriting libffi.pc'
mkdir -p $BUILD_DIR/.heroku/vendor/lib/pkg-config
sed -e "s%/usr%/app/.apt/usr%" -e "s%Cflags:%Cflags: -I\${includedir}/x86_64-linux-gnu%" < $BUILD_DIR/.apt/usr/lib/pkgconfig/libffi.pc > $BUILD_DIR/.heroku/vendor/lib/pkg-config/libffi.pc

# topic 'Env vars'
# env
# topic 'New libffi.pc'
# cat $BUILD_DIR/.heroku/vendor/lib/pkg-config/libffi.pc
# topic 'Include dir'
# ls -la $BUILD_DIR/.apt/usr/include
# topic 'Subdir'
# ls -la $BUILD_DIR/.apt/usr/include/x86_64-linux-gnu
# head $BUILD_DIR/.apt/usr/include/x86_64-linux-gnu/ffi.h
topic 'pkg-config output'
env PKG_CONFIG_PATH=$BUILD_DIR/.heroku/vendor/lib/pkg-config pkg-config --cflags-only-I libffi
env PKG_CONFIG_PATH=$BUILD_DIR/.heroku/vendor/lib/pkg-config pkg-config --cflags-only-other libffi
env PKG_CONFIG_PATH=$BUILD_DIR/.heroku/vendor/lib/pkg-config pkg-config --libs-only-L libffi
env PKG_CONFIG_PATH=$BUILD_DIR/.heroku/vendor/lib/pkg-config pkg-config --libs-only-other libffi
env PKG_CONFIG_PATH=$BUILD_DIR/.heroku/vendor/lib/pkg-config pkg-config --libs-only-l libffi
